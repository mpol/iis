<?xml version="1.0"?>
<workflow-app xmlns="uri:oozie:workflow:0.4" name="referenceextraction_springer_nature_bioentity_main_sqlite">

    <parameters>
        <property>
            <name>input_document_text</name>
            <description>input document text</description>
        </property>
        <property>
            <name>bioentity_db_file</name>
            <description>bioentity SQLite DB path</description>
        </property>
        <property>
            <name>output_document_to_bioentity</name>
            <description>output document to patent</description>
        </property>

        <property>
            <name>sparkDriverMemory</name>
            <description>memory for driver process</description>
        </property>
        <property>
            <name>sparkExecutorMemory</name>
            <description>memory for individual executor</description>
        </property>
        <property>
            <name>oozieActionShareLibForSpark2</name>
            <description>oozie action sharelib for spark 2.*</description>
        </property>
        <property>
            <name>spark2ExtraListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorAppListener</value>
            <description>spark 2.* extra listeners classname</description>
        </property>
        <property>
            <name>spark2SqlQueryExecutionListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorQueryListener</value>
            <description>spark 2.* sql query execution listeners classname</description>
        </property>
        <property>
            <name>spark2YarnHistoryServerAddress</name>
            <description>spark 2.* yarn history server address</description>
        </property>
        <property>
            <name>spark2EventLogDir</name>
            <description>spark 2.* event log dir location</description>
        </property>
    </parameters>

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>

    <start to="main_sqlite"/>

    <action name="main_sqlite">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <configuration>
                <property>
                    <name>oozie.action.sharelib.for.spark</name>
                    <value>${oozieActionShareLibForSpark2}</value>
                </property>
            </configuration>
            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>springer-nature-bioentity-referenceextraction-main-sqlite</name>
            <class>
                eu.dnetlib.iis.wf.referenceextraction.springernature.bioentity.SpringerNatureBioEntityReferenceExtractionJob
            </class>
            <jar>${oozieTopWfApplicationPath}/lib/iis-wf-referenceextraction-${projectVersion}.jar</jar>
            <spark-opts>
                --executor-memory=${sparkExecutorMemory}
                --executor-cores=${sparkExecutorCores}
                --driver-memory=${sparkDriverMemory}
                --conf spark.extraListeners=${spark2ExtraListeners}
                --conf spark.sql.queryExecutionListeners=${spark2SqlQueryExecutionListeners}
                --conf spark.yarn.historyServer.address=${spark2YarnHistoryServerAddress}
                --conf spark.eventLog.dir=${nameNode}${spark2EventLogDir}
            </spark-opts>
            <arg>-inputDocumentText=${input_document_text}</arg>
            <arg>-scriptsDir=${wf:conf('oozie.wf.application.path')}/lib/scripts</arg>
            <arg>-bioEntityDbFile=${nameNode}${bioentity_db_file}</arg>
            <arg>-outputDocumentToBioEntity=${output_document_to_bioentity}</arg>
        </spark>
        <ok to="end"/>
        <error to="fail"/>
    </action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>

    <end name="end"/>
</workflow-app>